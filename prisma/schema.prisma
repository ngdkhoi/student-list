// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model educationLevels {
  id Int @id  @default(autoincrement())
  level Int
  yearSchedule Int
  schoolIds schools[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model schools {
  id Int @id  @default(autoincrement())
  name String
  educationLevelId Int

  educationLevel educationLevels @relation(fields: [educationLevelId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model teachers {
  id Int @id  @default(autoincrement())
  schoolId Int
  role Int
  subjectIds subjects[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model subjects {
  id Int @id  @default(autoincrement())
  name String
  teacherId Int
  studentMarks studentMarks[]
  teacher teachers @relation(fields: [teacherId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model students {
  id Int @id  @default(autoincrement())
  name String?

  studentMarks studentMarks[]
  studentInClasses studentInClass[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model studentMarks {
  id Int @id  @default(autoincrement())
  mark Float @default(0)
  studentId Int
  subjectId Int
  factor Int
  
  student students @relation(fields: [studentId], references: [id])
  subject subjects @relation(fields: [subjectId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model classes {
  id Int @id  @default(autoincrement())
  schoolYear String

  studentInClasses studentInClass[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model studentInClass {
  studentId Int
  classId Int

  student students @relation(fields: [studentId], references: [id])
  class classes @relation(fields: [classId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@id([studentId, classId])
}


